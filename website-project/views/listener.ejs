<!DOCTYPE html>
<html>
  <head>
    <link rel="stylesheet" href="../css/listener.css">
  </head>
  <title> <%= "BEST SONG APP" %></title>


  <body>
    <section class="frontBackandPPButtons" style="color:#732A10">
      <button class="button buttonBack">&#8249</button>
      <button class="button buttonForward" style="margin-left: 60px;">&#8250</button>
      <button class="button buttonProfilePicture">ProfilePicture</button>


      <button onclick="return dropdownBox()" class="dropbtn">ProfilePicture</button>
      <div id="myDropdown" class="dropdown-content">
        <a href="#home">Home</a>
        <a href="#login">Login</a>
        <a href="#about">About</a>
        <a href="#Logout">Logout</a>
      </div>


      <button class="plusButton">
          <div class="plusHorizontal"></div>
          <div class="plusVertical"></div>
      </button>
      <button class="minusButton">
          <div class="minusHorizontal"></div>
      </button>
    </section>

    <section class="playlist" style="color:#732A10">
      <% for (let i = 1; i <= 8; i++) { %>
        <button class="playlistButton playlist<%= i %>" onclick="alert('Going to playlist<%= i %>')">playlist <%= i %></button>
      <% } %>
    </section>

    <div class="DJs" style="color:#732A10">
      <% for (let i = 1; i <= 8; i++) { %>
        <button class="DJButton DJ<%= i %>">DJ <%= i %></button>
      <% } %>
    </div>

    <form name="searchBarForm" method="post" action="/search-history">
      <div class="searchBar" onsubmit="myFunction()">
        <input type="text" name="query" placeholder="Enter music to search">
        <button type="submit" style="margin-top: -1050px; margin-left:250px; position:fixed;">Search and Save</button>
      </div>
    </form>
    <form id="logoutForm" method="post" action="/clear-history">
      <button type="submit" style="margin-top: -630px; margin-left:0px; position:fixed;">Logout</button>
    </form>

    <div class="userPreferedGenre" style="color:#732A10">User Prefered Genre</div>
    <div class="userPreferedGenreBox" style="color:#732A10"></div>
    <div class="recommendedPlaylist" style="color:#732A10">Recommended Playlist</div>
    <div class="recommendedDJs" style="color:#732A10">Recommended DJs</div>

    <div style="margin-top: -1450px; position: fixed;">
      <h1>Search History</h1>
      <ul>
        <% searchHistoryArray.forEach(entry => { %>
          <li><%= entry %></li>
        <% }); %>
      </ul>

    </div>

    <div class="playlistAudio">
      <audio controls id="playlistAudio1">
        <source src="../Audio/The Duck Song.mp3" type="audio/mpeg"">
      </audio>
    </div>



    <script>
      //A page for each playlist
      var playlistButton = document.querySelectorAll(".playlistButton");
      playlistButton.forEach(function(button){
        button.addEventListener("click",function(){
          var playlistNumber = button.classList[1].replace("playlist", "");
          var playlistURL = "playlist" + playlistNumber + ".html";
          window.location.href = "../html/listenerFiles/" + playlistURL;
        });
      });

      //A page for each DJs
      var DJButton = document.querySelectorAll(".DJButton");
      DJButton.forEach(function(button){
        button.addEventListener("click",function(){
          var djNumber = button.classList[1].replace("DJ", "");
          var djURL = "dj" + djNumber + ".html";
          window.location.href = "../html/djFiles/" + djURL;
        });
      });


      function validateSearch(){
        let x = document.forms["searchBarForm"]["search"].value;
        if(x == ""){
          alert("Please Enter A Song");
          return false;
        }
        else{
          console.log(x);
          return true;
        }
      }



      const userInfo = {
        firstName:"Adam",
        lastName:"Smith",
        username:"POWERRANGER45",
        age:25,
        yearsSinceInitalSignUp:2
      }

      console.log(userInfo.username);
      userInfo.yearsSinceInitalSignUp = 3;
      userInfo.favGenre = "Pop";





    // the functions below control the behaviour of the dropdown menu when the cursor moves towards it. 
    //The menu will only be visible when the cursor hovers over the dropdown button post which it will showcase the options. 
    //As soon as the cursor leaves the vicinity of the dropdown button button or the menu options, the dropdown would close.
    
    let dropdownBoxOpen = false;    //boolean to check whether or not dropdown box is open
    let isMouseInDropdown = false;  //boolean value to check whether the mouse is in vicinity of the dropdown button or the menu options
    let dropdownTimeout;  //sets a timeout variable to keep the function running for a certain time
    const dropdownStuff = document.getElementById("myDropdown");

    //function to make the dropdown menu visible
    function openDropdown(){
      clearTimeout(dropdownTimeout);    //clears the timeout so that the function can be executed immediately
      dropdownBoxOpen = true;
      dropdownStuff.style.display = "block";    //maipulate CSS attribute to display the box in a block format
    }

    function closeDropdown(){
      dropdownTimeout = setTimeout(() => {    //set a timeout of 200 ms to allow the cursor to hover over the options.
        dropdownBoxOpen = false;
        dropdownStuff.style.display = "none";
      },200);
          }

    //function to decide whther or not to toggle dropdown box
    function dropdownBox(){
      dropdownBoxOpen = ! dropdownBoxOpen;
      if(dropdownBoxOpen){
        openDropdown();
      } else{
        closeDropdown();
      }
    }
    const dropdownButton = document.querySelector('.dropbtn');

    dropdownButton.addEventListener('mouseenter', openDropdown);
    dropdownButton.addEventListener('click',(event) => {
      event.preventDefault();
      dropdownBox();
    });
    dropdownButton.addEventListener('mouseleave',() => {
      if(!isMouseInDropdown){
        closeDropdown();
      }
    });

    //event listeners handle events for the contents of the dropdown box to allow for the dropdown to be visible when the mouse is over the contents
    dropdownStuff.addEventListener('mouseenter',() =>{    //mouseenter event fired when cursor is within the vicinity of the element dropdownStuff
      clearTimeout(dropdownTimeout);  //clear timeout to keep dropdown open when mouse enters the vicinity of the dropdown content
      isMouseInDropdown = true;
    });

    dropdownStuff.addEventListener('mouseleave', () => {  //mouseleave event fired when cursor leaves vicinity of element dropdownStuff
      isMouseInDropdown = false;  //close the dropdown when mosue leaves the vicinity of the dropdown content
      closeDropdown();
    });

    const dropdownBoxOptions = document.querySelectorAll('.dropdown-content a');
    dropdownBoxOptions.forEach((option) => {
      option.addEventListener('mouseenter', () => {
        clearTimeout(dropdownTimeout);
      });
    });



    async function logout() {
      console.log('Logout function called');

      try {
        // Clear the search history array on the client side
        searchHistoryArray.length = 0;

        // Make an AJAX request to clear history on the server side
        const response = await fetch('/clear-history', { method: 'POST' });

        if (!response.ok) {
          throw new Error('Failed to clear history on the server');
        }

        const data = await response.json();
        console.log(data);

        // Optionally redirect the user to the login page or perform other actions
        window.location.href = '/login';  // Redirect to the login page
      } catch (error) {
        console.error('Error clearing history:', error);
      }
    }
    </script>

  </body>
</html>
